"""Add category to services

Revision ID: 364d1340104e
Revises: df888276f41f
Create Date: 2025-07-06 20:43:23.372634

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

service_category_enum_values = ['BASIC', 'EXTRA']
enum_name = 'servicecategoryenum' # This must match the name Alembic expects in PostgreSQL
service_category_enum_type = sa.Enum(*service_category_enum_values, name=enum_name)

# revision identifiers, used by Alembic.
revision: str = '364d1340104e'
down_revision: Union[str, Sequence[str], None] = 'df888276f41f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    service_category_enum_type.create(op.get_bind())

    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('services', sa.Column('category', service_category_enum_type, nullable=True))
    op.drop_index(op.f('ix_services_name'), table_name='services')

    # Step 2: Update existing rows to set the default value
    # IMPORTANT: Ensure the default value matches the one in your model.
    # If using an Enum, use its string value.
    op.execute(
        "UPDATE services SET category = 'BASIC' WHERE category IS NULL"
    )

    # Step 3: Alter the column to be NOT NULL
    op.alter_column(
        'services',
        'category',
        existing_type=service_category_enum_type,
        nullable=False, # Now make it NOT NULL
        existing_server_default='BASIC' # Specify the existing server default
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('ix_services_name'), 'services', ['name'], unique=False)
    op.drop_column('services', 'category')
    # ### end Alembic commands ###
