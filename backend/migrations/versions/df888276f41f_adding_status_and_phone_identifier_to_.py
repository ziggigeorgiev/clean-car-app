"""adding status and phone identifier to order

Revision ID: df888276f41f
Revises: e5d493176167
Create Date: 2025-07-05 22:04:20.589361

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

order_status_enum_values = ['OPEN', 'COMPLETED', 'CANCELLED']
enum_name = 'orderstatusenum' # This must match the name Alembic expects in PostgreSQL
order_status_enum_type = sa.Enum(*order_status_enum_values, name=enum_name)

# revision identifiers, used by Alembic.
revision: str = 'df888276f41f'
down_revision: Union[str, Sequence[str], None] = 'e5d493176167'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    order_status_enum_type.create(op.get_bind())

    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('orders', sa.Column('status', order_status_enum_type, nullable=True))
    # ### end Alembic commands ###

    # Step 2: Update existing rows to set the default value
    # IMPORTANT: Ensure the default value matches the one in your model.
    # If using an Enum, use its string value.
    op.execute(
        "UPDATE orders SET status = 'OPEN' WHERE status IS NULL"
    )

    # Step 3: Alter the column to be NOT NULL
    op.alter_column(
        'orders',
        'status',
        existing_type=order_status_enum_type,
        nullable=False, # Now make it NOT NULL
        existing_server_default='pending' # Specify the existing server default
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('orders', 'status')
    # ### end Alembic commands ###
